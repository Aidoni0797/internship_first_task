7.5 Parsing Group Messages

Парсим сообщения группы

Для парсинга сообщений из группы или паблика Telegram используется два основных метода библиотеки
Telethon. Первый метод - это .get_messages(), который возвращает указанное количество сообщений чата.
Второй метод - это - .iter_messages(), который совершает итерации по каждому сообщению отдельно. У каждого 
из этих методов есть свои плюсы и минусы. Рассмотрим эти два метода более подробно.

Метод .client.get_messages() - возвращает TotalList(<class 'telthon.helpers.TotalList'>), это список с
дополнительными total свойством, который очень сильно похож на именрванный кортеж, взаимодействие с ним
происходит по тому же принципу, что и с TotalList.

Метод client.iter_messages() - итерируется по каждому сообщению чата отдельно, удобен, если мы хотим
обрабатывать сообщения на лету.

Выполним код ниже и посмотрим на возвращаемый методом .get_messages() объект, и разберем его подробнее.

from telethon import TelegramClient, events, sync, connection

r_api=1**********8
r_hash='b******************************b'

with TelegramClient('my', r_api, r_hash) as client:
  all_message = client.get_messages('https://t.me/Parsinger_Telethon_Test')
  for message in all_message:
    print(message)

>>>Message(id=200, peer_id=PeerChannel(channel_id=1795821154), date=datetime.datetime(2022,6,11,9,40,26,
tzinfo=datetime, timezone.utc), message='56405643545063445516345054346351', out=False, mentioned=False,
media_unread=False,silent=False,post=False,from_scheduled=False,legacy=False, edit_hide=False,
pinned=False, from_id=PeerUser(user_id=5125814085), fwd_from=None, via_bot_id=None, reply_to=None,
media=None, reply_marlup=None, entities=[], views=None, forwards=None, replies=MessageReplies(replies=0,
replies_pts=213, comments=False, recent_repliers=[], channel_id=None, max_id=None, read_max_id=None),
edit_date=None, post_author=None, grouped_id=None, retriction_reason=[], ttl_period)
