4.7 Parsing Tabular Data

Парсинг табличных данных

Парсинг табличных данных ничем не отличается от прасинга других данных, за исключением того, что данные лежат в таблице. Если вы собираетесь заниматься обработкой больших данных, 
то парсингом таблицы вы будете заниматься регулярно.

Для начала нам нужно понять, как устроены таблицы в HTML. Любая табюлица состоит из табличных тегов, перечисленных ниже:

- <table></table> - служит основным тегом контейнеров для ячеек таблицы, любая таблица начинается с этого тега;
- <td></td> - (table data) - создает ячейку, в которой могут хранится любые данные;
- <th></th> - (table header) - создает ячейку-заголовок для столбца в таблице;
- <tr></tr> - (table row) - создает строку в таблице, любая таблица должна иметь хоотя бы 1 строку.

Пример таблицы с простыми ячейками <td></td>

<table>
  <tr>
    <td><b>td</b>First cell</td>
    <td><b>td</b>Second cell</td>
  </tr>
  <tr>
    <td><b>td</b>Third cell</td>
    <td><b>td</b>Fouth cell</td>
  </tr>
</table>

Пример таблицы с заголовками <th></th>

<table>
  <tr>
    <th>th - Header</th>
    <th>th - Header</th>
  </tr>
  <tr>
    <td><b>td</b>First cell</td>
    <td><b>td</b>Second cell</td>
  </tr>
  <tr>
    <td><b>td</b>Third cell</td>
    <td><b>td</b>Fourth cell</td>
  </tr>
</table>

Задание 1.
1. На сайте https://parsinger.ru/table/1/index.html расположена таблица;
2. Цель: Собрать все уникальные числа из таблицы (кроме цифр в заголовке) и суммировать их;
3. Полученный результат вставить в поле ответа.

Решение:
import requests
from bs4 import BeautifulSoup

# Получаем HTML страницу
url = "https://parsinger.ru/table/1/index.html"
response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')

# Находим все ячейки таблицы, кроме заголовков (<th>)
td_elements = soup.find_all('td')

# Извлекаем числа, превращаем в float и собираем уникальные
unique_numbers = set(float(td.text) for td in td_elements)

# Суммируем уникальные числа
total = sum(unique_numbers)

print(total)

--------------------------------
Задание 2

1. На сайте https://parsinger.ru/table/2/index.html расположена таблица;
2. Цель: Собрать число с 1го столбца и суммировать их;
3. Полученный результат вставить в поле ответа.

Решение

import requests
from bs4 import BeautifulSoup

url = "https://parsinger.ru/table/2/index.html"
response = requests.get(url)
soup = BeautifulSoup(response.text, "html.parser")

# Находим все строки таблицы, кроме заголовка
rows = soup.find_all('tr')[1:]  # пропускаем первую строку с заголовками

# Суммируем значения из первого столбца каждой строки
total = sum(float(row.find_all('td')[0].text) for row in rows)

print(total)

---------------------------------
Задание 3

1. На сайте https://parsinger.ru/table/3/index.html расположена таблица;
2. Цель: Собрать числа которые выделены жирным шрифтом и суммировать их;
3. Полученный результат вставить в поле ответа.

Решение

import requests
from bs4 import BeautifulSoup

url = "https://parsinger.ru/table/3/index.html"
response = requests.get(url)
soup = BeautifulSoup(response.text, "html.parser")

# Находим все элементы <b> и суммируем содержащиеся в них числа
bold_numbers = [float(b.text) for b in soup.find_all('b')]
total = sum(bold_numbers)

print(total)

--------------------------
Задание 4

1. На сайте https://parsinger.ru/table/4/index.html расположена таблица;
2. Цель: Собрать числа в зелёных ячейках и суммировать их;
3. Полученный результат вставить в поле ответа

Решение

import requests
from bs4 import BeautifulSoup

url = "https://parsinger.ru/table/4/index.html"
response = requests.get(url)
soup = BeautifulSoup(response.text, "html.parser")

# Находим все ячейки с зелёным цветом текста
green_cells = soup.find_all('td', style="color: green;")

# Извлекаем числа и суммируем
total = sum(float(cell.text) for cell in green_cells)

print(total)

(Бог знает правильно или нет Но ответ 0, и почему же)


----------------------------
Задание 5

1. На сайте https://parsinger.ru/table/5/index.html расположена таблица;
2. Цель: Умножить число в оранжевой ячейка на число в голубой ячейке в той же строке и всё суммировать;
3. Полученный результат встаивть в поле ответа.

Решение

import requests
from bs4 import BeautifulSoup

url = "https://parsinger.ru/table/5/index.html"
response = requests.get(url)
soup = BeautifulSoup(response.text, "html.parser")

total = 0

rows = soup.find_all('tr')[1:]  # Пропускаем заголовок

for row in rows:
    orange_value = None
    blue_value = None
    for td in row.find_all('td'):
        style = td.get('style')
        if style == 'background-color: orange;':
            orange_value = float(td.text)
        elif style == 'background-color: #87CEFA;':
            blue_value = float(td.text)
    if orange_value is not None and blue_value is not None:
        total += orange_value * blue_value

print(total)

----------------------------------
Задание 6

1. На сайте https://parsinger.ru/table/5/index.html расположена таблица;
2. Цель: Написать скрипт который формирует словарь, где ключ будет автоматически формироваться из заголовка
столбцов, а значения это сумма всех чисел  в столбце;
3. Округлить каждое число в значении до 3х символов после запятой.
4. Полученный словарь вставить в поле ответа.

Решение
import requests
from bs4 import BeautifulSoup

url = "https://parsinger.ru/table/5/index.html"
response = requests.get(url)
soup = BeautifulSoup(response.text, "html.parser")

# Получаем заголовки таблицы
headers = [th.text for th in soup.find_all('th')]

# Инициализируем словарь с нулями
column_sums = {header: 0.0 for header in headers}

# Получаем все строки таблицы, кроме заголовка
rows = soup.find_all('tr')[1:]

for row in rows:
    cells = row.find_all('td')
    for i, cell in enumerate(cells):
        value = float(cell.text)
        column_sums[headers[i]] += value

# Округляем значения до 3 знаков после запятой
rounded_sums = {key: round(value, 3) for key, value in column_sums.items()}

print(rounded_sums)

