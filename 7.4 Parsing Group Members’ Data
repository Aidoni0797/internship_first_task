7.4 Parsing Group Members’ Data

Данные пользователя

Когда мы хотим спарсить данные из гурппы телеграмм, мы хотим получить либо информацию о ее подписчиках, 
либо общую переписку. В этом разделе мы научимся собирать данные о пользователях в группе.

Давайте вместе выполним ззапрос и получим данные "О себе", они ни чем не отличаются от данных, полученных о
другом пользователе, из исключением содержимого. Если вы все сделали как написано в модуле Установка,
настройка и импорты, после выполнение кода  ниже у вас появится кортеж с данными, давайте разберемся,
что мы получили.

Выполнение код у себя в терминале

from telethon import TelegramClient, events, sync, connection

r_api = 1*****8 #данные скрыты в целях безопасности
r_hash = 'b******4****0b0****9****8**b' #данные скрыты в целях безопасности

client = TelegramClient('session_name2', r_api, r_hash)
client.start()
print(client.get_me())

User(
  id = 332703068 - id пользователя;
  is_self = True - возвращает True, если запрос был отправлен "О себе", возвращает False в противоположном случае;
  contact = True - возвращает True, если пользователь есть в вашем списке контактов, возвращает False 
в противоположном случае;
  matual_contact - True - возвращает True, если пользователи взаимно подписаны друг на друге 
(есть у друг друга в контактах), возвращает False в  противоположном случае;
  deleted = False - возвращает True, если аккаунт пользователя был удален, False, если аккаунт активен;
  bot = False - возвращает True, если аккаунт является ботом, возвращает False в противоположном случае;
  bot_chat_history = False - возвращает True, если данный бот умеет читать сообщения в группе, возвращает
False в противоположном случае;
  bot_nochats=False - возвращает True, если бота можно добавить в группу, возврщает False в противоположном случае;
  verified=False - возвращает True, если пользователь верифицирован при помощи смс, возвращает False
в противоположном случае;
  retricted=False - возвращает True, если пользователь находится в вашем чёрном списке, возвращает False
в противоположно случае;
  min =  False;
  bot_inline_geo = False - возвращает True, если бот может запращивать вашу геолокацию.
  support = False - возвращает True, если пользователь является официальным пользователем поддержки,
возвращает False в противоположном случае;
  scam = False - возвращает True,  если на пользователя было отправлено множество жалоб о мошенничестве
(нигде нет инфы о том, сколько конкретно должно быть жалоб), возвращает False в противоположном случае;
  apply_min_photo = False - возвращает True, если у пользователя установлено фото профиля, возвращает
False в противоположном случае;
  fake = False - возвращает True, если множество пользователей пожаловались о том, что аккаунт фейковый
(не известно отличие от scam=False), возвращает False в противоположном случае;
  access_hash = -5**4**6**7**5**5**3 - возвращает хэш доступа пользователя;
  first_name='Павел' - возвращает first_name пользователя;
  last_name='Хошев' - возвращает last_name пользователя;
  username = 'Pashikk' - возвращает username пользователя;
  phone = '7**8***7**5' - возвращает phone пользователя, если он не скрыт в настройках конфиденциальности;
  photo=UserProfilePhoto(вложенный кортеж с фото пользователя, если оно есть;
    photo_id = 1428948796795103153 - id фото пользователя;
    dc_id = 2 - идентификатор DC, где хранится фото пользователя;
    hash_video=False - возвращает True, если у пользователя анимировання аватарка, возвращает False 
в противоположенном случае;
    stripped_thumb = b'\x01\x08\x08I\xb5\x12\xe4\xed\x90\x8c\xf1\x81\xe9E\x14Qa
') - обрезенная миниатюра, хранится в байтовом виде и может быть скачана;
  status=UseStatusOffLine(was_online=datetime.datetime(2022,6,11,11,57,8,tzinfo=datetime.timezone.utc))-
онлайн-статус пользователя (когда был онлайн последний раз);
  bot_info_version = None - если пользователь бот, будет отображена его версия;
  restriction_reason = [] - содержится причина, по которой пользователь был ограничен для вас;
  bot_inline_placeholder=None - строка текста для бота по умолчанию;
  lang_code = None) - код языка пользователя.


Парсим участников группы

Для работы с этим модулем, была создана отдельная группа в Telegram, просьба не подписываться, а только
взаимодействовать с ней в рамках курса. Некоторые задачи завязаны на сообщенияя в группе и на
пользователей в ней. Для того, чтобы не сломать задачи себе и другим учащимся не подписывайтесь на нее.
Telethon позволяет собирать информацию с групп, даже если вы не подписаны на них.

Первый основной метод для получения участников группы - .get_participants("url_telegram_chat").Метод
принимает аргумент - ссылку на группу в telegram, у которой необходимо получить её участников.

Выполните код у себя в терминале чтобы получить всех участников нашей учебной группы:

from telethon import TelegramClient, events, sync, connection

r_api = 1*****8 #данные скрыты в целях безопасности
r_hash = 'b******4****0b0****9****8**b' #данные скрыты в целях безопасности

client =  TelegramClient('session_name2', r_api, r_hash)
client.start()

prticipants = client.get_participants('t.me/Parsinger_Telethon_Test')

>>> [User(id=332703068, is_self=True, contact=True, mutual_contact=True, deleted=False, bot=False,
bot_chat_history=false,bot_nochats=False,verified=False,retricted=false,min=False,bot_inline_geo=False,
support=False, scam=False, apply_min_photo=False, fake=False, access_hash=-5964566557575375003,
first_name='Павел',last_name='Хошев', username='Pashikk', phone='79384757505', photo=UserProfilePhoto(
photo_id
))]
