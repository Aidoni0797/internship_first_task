3.5 Getting the contents of the response object

Содержимое ответа response .json() .text .content

json()

Если вы уже знакомы с JSON, вам будет легче понять следующий пример. Если JSON вам не знаком, не переживайте: в следующих блоках мы остановимся на нем подробнее.

А пока сделаем простой запрос к сервису, который помогает сгенерировать фейковый JSON https://jsonplaceholder.typicode.com/todos/ - возвращает нам JSON-словарь.

import requests
response = requests.get(url='https://jsonplaceholder.typicode.com/todos/')
print(response.json())

>>>[{'userId': 1, 'id': 1, 'title': 'deletus aut autem', 'completed': False},]
....

import requests

response = requests.get(url='https://jsonplaceholder.typicode.com/todos/')
print(response.text)

>>>[
{
  "userId":1,
  "id": 1,
  "title": "delectus aut autem",
  "completed": false
},.....
]

Если вы скопируете и выполните эти два примера у себя в терминале, вы обнаружите, что .text и .json() вернут одну и ту же информацию.

Но на самом деле это не так. Если мы посмотрим на type() ответа каждого из запросов, мы обнаружим, что в случае с .json() мы получаем тип <class 'list'>,
а в случае с .text мы получаем тип <class 'str'>

.text

Так, а в чем разница и какой нам выбрать способ для парсинга?

1. Метод .json() мы используем в случае, когда мы знаем, отдает нам информацию в формате JSON. Как найти и получить ссылку, по которой мы могли бы получить данные
в этом формате, мы будем говорить в дальнейших уроках.

2. Атрибут .text мы будем использовать в тех случаях, когда будем парсить HTML при помощи BeautifulSoup (о котором также 
скоро поговорим).

Выполните следующий  код у себя в терминале и посмотрите на то, что вы получаете в ответ:

import requests

response = requests.get(url='http://httpbin.org/')
print(response.text)

.content

Атрибут .content нужен нам для загрузки медиа-файлов, картинок, всех форматов аудио и видео. Если мы выполним этот код без 
менеджера контекста with, мы увидим длинную байтовую строку.

import requests

response = requests.get(url='http://httpbin.org/image/jpeg')
print(response.content)

>>> b'\xff\xd8\xff\xe0\x00\x10JFIF\x00\x01\x01\x02\x00\x1c\x00\x1c\x00\x00\xff\xfe\x005Edited by Paul Sherman for WPClipart, Public Domain\xff\xdb\x00C\x00\x02\x01\x01\x01\x01\x01\x02\x01\x01\x01\x02\x02\x02\x02\x02\x04\x03\x02\x02\x02\x02\x05\x04\x04\x03\x04\x06\x05\x06\x06\x06\x05\x06\x06\x06\x07\t\x08\x06\x07\t\x07\x06\x06\x08\x0b\x08\t\n\n\n\n\n\x06\x08\x0b\x0c\x0b\n\x0c\t\n\n\n\xff\xdb\x00C\x01\x02\x02\x02\x02\x02\x02\x05\x03\x03\x05\n\x07\x06\x07\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\xff\xc0\x00\x11\x08\x00\xb2\x00\xef\x03\x01\x11\x00\x02\x11\x01\x03\x11\x01\xff\xc4\x00\x1e\x00\x00\x01\x05\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x06\x03\x04\x05\x07\x08\x02\t\x00\x01\n\xff\xc4\x00M\x10\x00\x01\x03\x03\x01\x07\x02\x03\x05\x05\x06\x02\x07\x06\x07\x00\x04\x01\x03\x05\x02\x06\x11!\x00\x07\x08\x12\x13\x141#A"$Q\t\x1534a
........................

Для того чтобы скачать медиа-файл, используйте менеджер контекста with

import requests

response = requests.get(url='http://httpbin.org/image/jpeg')

with open('image.jpeg', 'wb') as file:
  file.write(response.content)

Выполните этот код у себя в терминале? после его выполнения в вашей папке с проектом появится медиа-файл,
который мы скачали -  image.jpeg. Обратите внимание на флаг 'wb', он означает 'write.byte', т.е., запись байтов.
Помните об этом всякий раз, когда выполняете заказ на сбор различных медиа-файлов)

Также важно добавить, что в url = мы должны передать прямую ссылку на медиа-файл, и она не обязательно
