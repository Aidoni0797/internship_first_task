4.9 Saving the result in JSON

JSON - (англ. JavaScript Object Notation) - текстовый формат обмена данными, основанный на JavaScript. При
этом формат независим от JS и может использоваться в любом языке программирования.

JSON входит в стандартный пакет python, устанавливать его не нужно, достаточно просто импортировать 

import json

Сегодня мы будем рассматривать JSON с точки зрения сохранения информации. В этом уроке мы будем говорить 
с JSON-объектах, как их создавать, как сохранять, генерировать и манипулировать ими.

JSON - объект выглядит так, заключается в фигурные скобки. Он очень похож на словарь в Python,
если вы с ними уже знакомы, то освоить этот раздел будет очень просто.

[{
"name": "Иван",
"age": 27
}]

"name" - это ключ(key), а "Иван" - это значение (value), ключ и значение разделяются лвоеточием,
каждая пара ключ:значение, отделены друг от друга запятой.

Значение (value) может быть...
- Строкой;
- Числом;
- True or False;
- Null;
- Другим объектом, в том числе списком или словарем и может иметь какую угодно вложенность.

Один из простых примеров генерирования JSON объекта во время парсинга (#2)
import requests
from bs4 import BeautifulSoup
import json

#1---------------------------------------------
url = 'http://parsinger.ru/html/mouse/3/3_11.html'
response = requests.get(url=url)
response.encoding='utf-8'
soup = BeautifulSoup(response.text, 'lxml')
#1---------------------------------------------

#2---------------------------------------------
resul_json = {
  'name': soup.find('p', id='p_header').text,
  'price':soup.find('span', id='price').text
}
#2---------------------------------------------

#3---------------------------------------------
with open('res.json','w',encoding = 'utef-8') as file:
  json.dump(result_json, file, indent=4, ensure_ascii=False)
#3---------------------------------------------

>>>{
  "name": "Мышь Logitech G PRO HERO BLACK USB проводная",
  "price": "5100 руб"
}

В результате выполнения кода мы получили аккуратно собранные данные, которые мы запрашивали во время
парсинга:

1. В этом локе мы совершили get запрос на страницу и передали результат запроса в конструктор
BeautifulSoup;
2. Создали простой словарь result_json={}, вручную обозначили ключи, а в значения ключей мы запросили
информацию из объекта soup, добывая нужную нам информацию по тегам;
3. В менеджере контекста with обозначили название файла с расширением .json, указали
кодировку 'utf-8'.

Метод JSON:

- json.dump() - преобразует объекты python(в нашем примере это словарь) в соответствующий объект 
JSON. Метод .dump() первым параметром ожидает словарь, который мы будем записывать в файл,
а вторым параметром - файл, куда мы будем записывать наш словарь.
