4.3 Making the Soup

Приготовление супа

Чтобы приступить в анализу HTML кода, нам необходимо передать его в конструктор BeautifulSoup.

Мы можем передать текстовый файл в формате HTML или объект response.text из библиотеки requests, о которой мы говорили ранее.

Передаём текстовый файл с разметкой HTML.

from bs4 import BeautifulSoup
import requests
import lxml

#Пример 1. Передача файла HTML напрямую без использования менеджера контекста
file = open('index.html', encoding='utf-8')
soup=Beautiful(file, 'lxml')
file.close()
print(soup)

#Пример 2. Передача файла HTML напрямую с использованием менеджера контекста
with open('index.html', 'r', encoding='utf-8') as file:
  soup2 = BeautifulSoup(file, 'lxml')
  print(soup2)

Такой вариант используется в основном для написания и отладки наших парсеров. Когда сервер очень злой и мы часто улетаем в бан из-за огромного количества запросов к серверу,
мы сохраняем весь HTML страницы в файл и безопасно парсим уже с нашего HDD.

Давайте разберем soup = BeautifulSoup(file, 'lxml') вот эту строку.

Здесь мы создаем экземпляр класса BeautifulSoup и передаем в его конструктор 2 параметра:
1. Путь к файлу. Если путь к файлу длинный, его необходимо экранировать. C:\\project\\index.html
2. 'lxml' это название парсера, который мы передаем.

Передаём объект response.text

from bs4 import BeautifulSoup
import requests
import lxml
import sys

# Для Python ≥ 3.7
sys.stdout.reconfigure(encoding='utf-8')
#Пример3. Передача объекта response прямо из запроса
response = requests.get(url='http://parsinger.ru/html/watch/1/1_1.html')
soup = BeautifulSoup(response.text, 'lxml')

print(soup)


Это пример используется чаще всего. В этом примере мы совершили .get запрос, затем передали результат запроса в конструктор BeautifulSoup. Обратите внимание на метод
.text, который мы применили к объекту response. Конструктор BeautifulSoup умеет работать только с HTML, именно поэтому мы преобразуем объект response в текст.
Если этого не сделать, мы получим ошибку TypeError: object of type 'Response' has no len(), об этом важно знать.

Если у вас во время запроса к данной странице возникли проблемы с кодировкой и вы видите нечто подоное <title>ГђВџГђВ°Г‘ВЂГ‘ВЃГђВёГђВЅГђВі ГђВЅГђВ°(Непонятные символы)</title>
необходимо применить метод response.encoding='utf-8'. К сожелению, такое поведение иногда встречается, и я пока не знаю как решить эту пролблему на этом тренажере.
