4.8 Saving the result to Excel

CSV

CSV (Comma Separated Values) - значение, разделенные запятыми. Это один из самых простых способов хранения
информации в виде обычного текста. Данные представлены в табличной форме, где каждая строка является строкой 
запси таблицы. Модуль CSV входит в пакет поставки python, это означает, что нам не нужно его устанавливать,
достаточно сделать import csv.

Заказчикам на фриланс-биржах часто нужно сохранять результаты именно в один из популярных форматов 
CSV or JSON.

Формат CSV выглядит вот так: one; two; three, имеет расширение файла .csv и с легкостью открывается в Excel:
Именно вот так будет выглядеть наши данные, если мы откроем их в Excel. Работа с модулем CSV очень проста
и нам понадобится запомнить лишь пару приемов для того, чтобы успешно применять его на практике.

Для начала, нам нужно знать что любой список легко превратить в CSV

import csv

lst = ['one', 'two', 'three']

with open('res.csv', 'w', newline='', encoding='utf-8-sig') as file:
  writer = csv.writer(file, delimiter=';')
  writer.writerow(lst)

Чтобы в Excel корректно открывалась кодировка, используйте encoding='utf-8-sig'.
В результате выполнения этого кода будет создан файл res.csv, в который будет записан наш список 
lst, в каждой ячейке - элемент списка.

- newline='' - необходимо указывать всегда. Если не указать, то новые строки могут интерпретироваться
неправильно и весь документ "сползет"
- encoding = 'utf-8-sig' - open() использует для открытия .csv по умолчанию кодировки unicode. Чтобы
получить файл с необходимой нам кодировкой, нужно явно указывать ее.

witer = csv.writer(file, delimiter=';') - в этой строке мы создали экземпляр класса csv и применили к нему
метод writer(). У writer() есть метод writeow(), с помощью кторого можно записывать список в соответствующий
формат построчно. delimiter=';' указывает, каким будет разделить между элементами списка, мы можем
указатьт любой.

CSV часть 2

В этом уроке я хочу наглядно показать, как собрать информацию с тренажера (https://parsinger.ru/html/mouse/3/3_11.html)
и сохранить результат в формате .csv

import csv
import requests

from bs4 import BeautifulSoup

#1---------------------------------------------
with open('res.csv', 'w', encoding='utf-8-sig', newline='') as file:
  writer = csv.writer(file, delimiter=';')
  writer.writerow([
    'Наименование', 'Артикул', 'Бренд', 'Модель',
    'Тип','Игровая','Размер','Подсветка','Разрешение',
    'Сайт производителя','В наличии','Цена'
  ])
#1---------------------------------------------

#2---------------------------------------------
url = 'http://parsinger.ru/html/mouse/3/3_11.html'

response = requests.get(url=url)
response.encoding = 'utf-8'
soup = BeautifulSoup(response.text, 'lxml')
#2---------------------------------------------

#3---------------------------------------------
name = soup.find('p', id='p_header').text
article = soup.find('p', class_='article').text.split[': '][1]
brand = soup.find('li', id='brand').text.split(': ')[1]
model = soup.find('li', id='model').text.split(': ')[1]
type = soup.find('li', id='type').text.split(': ')[1]
purpose = soup.find('li', id='purpose').text.split(': ')[1]
light = soup.find('li', id='light').text.split(': ')[1]
size = soup.find('li', id='size').text.split(': ')[1]
dpi = soup.find('li', id='dpi').text.split(': ')[1]
site = soup.find('li', id='site').text.split(': ')[1]
in_stock = soup.find('span', id='in_stock').text.split(': ')[1]
price = soup.find('span', id='price').text.split(' ')[0]
#3---------------------------------------------

#4---------------------------------------------
with open('res.csv', 'a', encoding='utf-8-sig', newline='') as file:
  writer = csv.writer(file, delimiter=';')
  writer.writerow([
    name, article, brand, model,
    type, purpose, light, size, dpi,
    site, in_stock, price
  ])
#4---------------------------------------------

Я визуально разделил код на 4 части.

1. В первом блоке мы создали файл res.csv и определили в нем первые 12 ячеек для заголовков. При
просмотре в текстовом редакторе это будет выглядеть вот так:
2. Когда мы откроем его в excel, это будет выглядеть вот так. Наличик заголовков это хорошая
практика, но не обязательная.
3. Вторая часть кода - это стандартные запросы к сайту, которые вы уже использовали при выполнении задач;
4. Третья часть хорошо показывает, что мы получаем нужные нам элементы и храним их в переменных,
которые в 4-м пунтке мы передаем в метод .writerow(). Обратите внимание на то, что мы передаем список;
5. И в результате выполнения 4-го блока кода мы получаем готовый файл .csv, в котором будут красиво
лежать наши данные.
Обратите внимание, что в 4-м блоке мы используем флаг 'a' для того, чтобы дописать созданный в первом
блоке файл. 'a' - 'append' - добавление в конец. Если флаг будет 'w' - 'write', то файл перезапишется заново и 
заголовки мы не увидим.
